<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Today I Learned</title>
    <link>https://today.countableset.com/posts/</link>
    <description>Recent content in Posts on Today I Learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Aug 2020 16:57:06 -0700</lastBuildDate>
    
	<atom:link href="https://today.countableset.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020 08 17</title>
      <link>https://today.countableset.com/posts/2020-08-17/</link>
      <pubDate>Mon, 17 Aug 2020 16:57:06 -0700</pubDate>
      
      <guid>https://today.countableset.com/posts/2020-08-17/</guid>
      <description>Validations in Spring in Kotlin  @UniqueName data class CreateRequest( val id: String = &amp;quot;&amp;quot;, @get:NotBlank(message = &amp;quot;{req.name.blank}&amp;quot;) val name: String = &amp;quot;&amp;quot;, @get:NotBlank(message = &amp;quot;{req.description.blank}&amp;quot;) val description: String = &amp;quot;&amp;quot;, @get:Valid val nested: NestedClass = NestedClass(&amp;quot;&amp;quot;, &amp;quot;&amp;quot;), ) data class NestedClass( @get:NotBlank(message = &amp;quot;{req.nested.something.blank}&amp;quot;) val something: String, @get:NotBlank(message = &amp;quot;{req.nested.something_else.blank}&amp;quot;) val somethingElse: String ) @Target(AnnotationTarget.CLASS) @Retention(AnnotationRetention.RUNTIME) @Constraint(validatedBy = [UniqueNameValidator::class]) annotation class UniqueName( val message: String = &amp;quot;&amp;quot;, val groups: Array&amp;lt;KClass&amp;lt;*&amp;gt;&amp;gt; = [], val payload: Array&amp;lt;KClass&amp;lt;out Payload&amp;gt;&amp;gt; = [] ) class UniqueNameValidator( private val sampleService: SampleService ) : ConstraintValidator&amp;lt;UniqueName, CreateRequest&amp;gt; { override fun isValid(request: CreateRequest, context: ConstraintValidatorContext): Boolean { val dupSample = sampleService.</description>
    </item>
    
    <item>
      <title>2020 07 29</title>
      <link>https://today.countableset.com/posts/2020-07-29/</link>
      <pubDate>Wed, 29 Jul 2020 16:57:06 -0700</pubDate>
      
      <guid>https://today.countableset.com/posts/2020-07-29/</guid>
      <description>Spring boot (2.3.0+) tomcat access log configuration to log to stdout  server.tomcat.accesslog.enabled=true server.tomcat.accesslog.directory=/dev server.tomcat.accesslog.prefix=stdout server.tomcat.accesslog.buffered=false server.tomcat.accesslog.suffix= server.tomcat.accesslog.file-date-format= server.tomcat.accesslog.pattern=%{yyyy-MM-dd HH:mm:ss.SSS}t %r %s %b %T | %{Content-Type}i | %{Content-Type}o Spring WebClient Exceeded limit on max bytes to buffer exception  Fix is to increase the max memory size for a specific codec or all codecs, for example: spring.codec.max-in-memory-size=20MB
2020-07-29 16:58:43.046 WARN 1 --- [or-http-epoll-2] reactor.netty.channel.FluxReceive : [id: 0xca1ab03a, L:/x.x.x.x ! R:example.</description>
    </item>
    
    <item>
      <title>2020 07 17</title>
      <link>https://today.countableset.com/posts/2020-07-17/</link>
      <pubDate>Fri, 17 Jul 2020 16:57:06 -0700</pubDate>
      
      <guid>https://today.countableset.com/posts/2020-07-17/</guid>
      <description>Collections.unmodifiable* can throw StackOverflowError errors when used recursively. For example:  Exception in thread &amp;quot;main&amp;quot; java.lang.StackOverflowError at java.util.Collections$UnmodifiableCollection$1.&amp;lt;init&amp;gt;(Collections.java:1039) at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) at java.util.Collections$UnmodifiableCollection$1.&amp;lt;init&amp;gt;(Collections.java:1039) at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [...] Reproducible Source:
List&amp;lt;Integer&amp;gt; list = Collections.unmodifiableList(Arrays.asList(0, 1, 2)); for (int i = 0; i &amp;lt; 10000; i++) { list = Collections.unmodifiableList(list); } for (int i : list) { System.out.println(i); } Just thought that was interesting.</description>
    </item>
    
    <item>
      <title>2020 07 14</title>
      <link>https://today.countableset.com/posts/2020-07-14/</link>
      <pubDate>Tue, 14 Jul 2020 13:52:06 -0700</pubDate>
      
      <guid>https://today.countableset.com/posts/2020-07-14/</guid>
      <description>Provisioning Grafana Docker docker-compose.yml   prometheus: image: prom/prometheus restart: always volumes: - ./prometheus/config.yaml:/etc/prometheus/prometheus.yml command: &amp;quot;--config.file=/etc/prometheus/prometheus.yml&amp;quot; ports: - &amp;quot;9090:9090&amp;quot; # ui networks: - service grafana: image: grafana/grafana restart: always volumes: - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/ - ./grafana/datasources:/etc/grafana/provisioning/datasources/ ports: - &amp;quot;3000:3000&amp;quot; # ui networks: - service File structure
./grafana ├── dashboards │ ├── dashboard.yaml │ └── go-processes_rev2.json └── datasources └── datasources.yaml dashboard.yaml
apiVersion: 1 providers: # &amp;lt;string&amp;gt; an unique provider name - name: &amp;quot;a unique provider name&amp;quot; # &amp;lt;int&amp;gt; org id.</description>
    </item>
    
    <item>
      <title>2020 07 10</title>
      <link>https://today.countableset.com/posts/2020-07-10/</link>
      <pubDate>Fri, 10 Jul 2020 16:57:06 -0700</pubDate>
      
      <guid>https://today.countableset.com/posts/2020-07-10/</guid>
      <description>Hello World. First!
 Profiling golang projects  # .go file import ( _ &amp;quot;net/http/pprof&amp;quot; ) # bash $ curl -sK -v localhost:30020/debug/pprof/heap &amp;gt; heap.out $ go tool pprof heap.out (pprof) png Generating report in profile001.png (pprof) exit $ go tool pprof -http=:8080 heap.out Output in png requires graphviz (brew install graphviz)
Fix tmux configuration issues when upgrading iTerm2 and tmux version 2.9 to 3.1b  unbind } ==&amp;gt; unbind &amp;quot;{&amp;quot; unbind { ==&amp;gt; unbind &amp;quot;{&amp;quot; bind \ if &#39;[ ===&amp;gt; bind \\ if &#39;[ Scrolling in iTerm and tmux, fixed by</description>
    </item>
    
  </channel>
</rss>