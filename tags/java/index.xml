<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Today I Learned</title><link>https://today.countableset.com/tags/java/</link><description>Recent content in java on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 17 Jul 2020 16:57:06 -0700</lastBuildDate><atom:link href="https://today.countableset.com/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>2020 07 17</title><link>https://today.countableset.com/posts/2020-07-17/</link><pubDate>Fri, 17 Jul 2020 16:57:06 -0700</pubDate><guid>https://today.countableset.com/posts/2020-07-17/</guid><description>Collections.unmodifiable* can throw StackOverflowError errors when used recursively. For example: Exception in thread &amp;quot;main&amp;quot; java.lang.StackOverflowError at java.util.Collections$UnmodifiableCollection$1.&amp;lt;init&amp;gt;(Collections.java:1039) at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) at java.util.Collections$UnmodifiableCollection$1.&amp;lt;init&amp;gt;(Collections.java:1039) at java.util.Collections$UnmodifiableCollection.iterator(Collections.java:1038) [...] Reproducible Source:
List&amp;lt;Integer&amp;gt; list = Collections.unmodifiableList(Arrays.asList(0, 1, 2)); for (int i = 0; i &amp;lt; 10000; i++) { list = Collections.unmodifiableList(list); } for (int i : list) { System.out.println(i); } Just thought that was interesting.</description></item></channel></rss>