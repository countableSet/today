<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spring on Today I Learned</title><link>https://today.countableset.com/tags/spring/</link><description>Recent content in spring on Today I Learned</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 17 Aug 2020 16:57:06 -0700</lastBuildDate><atom:link href="https://today.countableset.com/tags/spring/index.xml" rel="self" type="application/rss+xml"/><item><title>2020 08 17</title><link>https://today.countableset.com/posts/2020-08-17/</link><pubDate>Mon, 17 Aug 2020 16:57:06 -0700</pubDate><guid>https://today.countableset.com/posts/2020-08-17/</guid><description>Validations in Spring in Kotlin @UniqueName data class CreateRequest( val id: String = &amp;quot;&amp;quot;, @get:NotBlank(message = &amp;quot;{req.name.blank}&amp;quot;) val name: String = &amp;quot;&amp;quot;, @get:NotBlank(message = &amp;quot;{req.description.blank}&amp;quot;) val description: String = &amp;quot;&amp;quot;, @get:Valid val nested: NestedClass = NestedClass(&amp;quot;&amp;quot;, &amp;quot;&amp;quot;), ) data class NestedClass( @get:NotBlank(message = &amp;quot;{req.nested.something.blank}&amp;quot;) val something: String, @get:NotBlank(message = &amp;quot;{req.nested.something_else.blank}&amp;quot;) val somethingElse: String ) @Target(AnnotationTarget.CLASS) @Retention(AnnotationRetention.RUNTIME) @Constraint(validatedBy = [UniqueNameValidator::class]) annotation class UniqueName( val message: String = &amp;quot;&amp;quot;, val groups: Array&amp;lt;KClass&amp;lt;*&amp;gt;&amp;gt; = [], val payload: Array&amp;lt;KClass&amp;lt;out Payload&amp;gt;&amp;gt; = [] ) class UniqueNameValidator( private val sampleService: SampleService ) : ConstraintValidator&amp;lt;UniqueName, CreateRequest&amp;gt; { override fun isValid(request: CreateRequest, context: ConstraintValidatorContext): Boolean { val dupSample = sampleService.</description></item><item><title>2020 07 29</title><link>https://today.countableset.com/posts/2020-07-29/</link><pubDate>Wed, 29 Jul 2020 16:57:06 -0700</pubDate><guid>https://today.countableset.com/posts/2020-07-29/</guid><description>Spring boot (2.3.0+) tomcat access log configuration to log to stdout server.tomcat.accesslog.enabled=true server.tomcat.accesslog.directory=/dev server.tomcat.accesslog.prefix=stdout server.tomcat.accesslog.buffered=false server.tomcat.accesslog.suffix= server.tomcat.accesslog.file-date-format= server.tomcat.accesslog.pattern=%{yyyy-MM-dd HH:mm:ss.SSS}t %r %s %b %T | %{Content-Type}i | %{Content-Type}o Spring WebClient Exceeded limit on max bytes to buffer exception Fix is to increase the max memory size for a specific codec or all codecs, for example: spring.codec.max-in-memory-size=20MB
2020-07-29 16:58:43.046 WARN 1 --- [or-http-epoll-2] reactor.netty.channel.FluxReceive : [id: 0xca1ab03a, L:/x.x.x.x ! R:example.</description></item></channel></rss>